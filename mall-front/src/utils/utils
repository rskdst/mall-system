
import store from "../store";
export const forEach = (arr, fn) => {
  if (!arr.length || !fn) return
  let i = -1
  let len = arr.length
  while (++i < len) {
    let item = arr[i]
    fn(item, i, arr)
  }
}
///////////////动态路由
/**
 * @description 将后端菜单树转换为路由树
 * @param {Array} menus
 * @returns {Array}
 */
const menuList = []
export const backendMenusToRouters = (menus) => {
  let routers = []
  forEach(menus, (menu) => {
    // 将后端数据转换成路由数据
    let route = backendMenuToRoute(menu)
    menuList.push(route)
    // 如果后端数据有下级，则递归处理下级
    if (menu.child.length > 0) {
      route.child = backendMenusToRouters(menu.child)
    }
    routers.push(route)
  })
  store.commit("setMenuList",menuList);
  return routers
}

/**
 * @description 将后端菜单转换为路由
 * @param {Object} menu
 * @returns {Object}
 */
const backendMenuToRoute = (menu) => {
  // 原先routers写法是component: () => import('@/view/error-page/404.vue')
  // 经过json数据转换，这里会丢失，所以需要做转换
  let route = Object.assign({}, menu)
  route.component = () => import(`@/${menu.component}`)
  return route
}
///////////////动态路由

